{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTokenExpired = void 0;\n\nvar base64_1 = require(\"./utils/base64\");\n\nexports.isTokenExpired = function (token, thresholdMillisec, logger) {\n  return isTimestampExpired(jwtExp(token, logger), thresholdMillisec, logger);\n};\n\nvar jwtExp = function (token, logger) {\n  var split = token.split('.');\n  logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'split', split);\n\n  if (split.length < 2) {\n    return null;\n  }\n\n  try {\n    var middlePart = base64_1.Base64.decode(token.split('.')[1]);\n    logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'middlePart', middlePart);\n    var jwt = JSON.parse(middlePart);\n    logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'jwt', jwt);\n\n    if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {\n      return jwt.exp * 1000;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    // tslint:disable-next-line:no-console\n    console.warn(e);\n    return null;\n  }\n};\n\nvar isTimestampExpired = function (exp, thresholdMillisec, logger) {\n  logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'exp', exp);\n\n  if (!exp) {\n    return false;\n  }\n\n  logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'Date.now()', Date.now());\n  logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', '(thresholdMillisec ?? 0', thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);\n  return Date.now() > exp - (thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);\n};","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/node_modules/react-token-auth/lib/isTokenExpired.js"],"names":["Object","defineProperty","exports","value","isTokenExpired","base64_1","require","token","thresholdMillisec","logger","isTimestampExpired","jwtExp","split","log","length","middlePart","Base64","decode","jwt","JSON","parse","exp","Number","isFinite","e","console","warn","Date","now"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTokenExpired = void 0;\nvar base64_1 = require(\"./utils/base64\");\nexports.isTokenExpired = function (token, thresholdMillisec, logger) {\n    return isTimestampExpired(jwtExp(token, logger), thresholdMillisec, logger);\n};\nvar jwtExp = function (token, logger) {\n    var split = token.split('.');\n    logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'split', split);\n    if (split.length < 2) {\n        return null;\n    }\n    try {\n        var middlePart = base64_1.Base64.decode(token.split('.')[1]);\n        logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'middlePart', middlePart);\n        var jwt = JSON.parse(middlePart);\n        logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'jwt', jwt);\n        if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {\n            return jwt.exp * 1000;\n        }\n        else {\n            return null;\n        }\n    }\n    catch (e) {\n        // tslint:disable-next-line:no-console\n        console.warn(e);\n        return null;\n    }\n};\nvar isTimestampExpired = function (exp, thresholdMillisec, logger) {\n    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'exp', exp);\n    if (!exp) {\n        return false;\n    }\n    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'Date.now()', Date.now());\n    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', '(thresholdMillisec ?? 0', thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);\n    return Date.now() > exp - (thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);\n};\n"]},"metadata":{},"sourceType":"script"}