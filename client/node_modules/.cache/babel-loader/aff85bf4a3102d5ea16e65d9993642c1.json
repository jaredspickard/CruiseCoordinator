{"ast":null,"code":"var _jsxFileName = \"/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n  }\n\n  async login() {\n    // acquire ThirdPartyToken and save to localStorage\n    await this.getThirdPartyToken(); // acquire BackendToken using the ThirdPartyToken and save to localStorage\n\n    await this.getBackendToken();\n  }\n\n  async getThirdPartyToken() {\n    localStorage.setItem('thirdPartyToken', 'abcdef');\n  }\n\n  async getBackendToken() {\n    const thirdPartyToken = localStorage.getItem('thirdPartyToken');\n\n    if (!thirdPartyToken) {\n      console.log('Unable to retrieve ThirdPartyToken.');\n    }\n\n    const backendToken = 'ghijk';\n    localStorage.setItem('backendToken', backendToken);\n  }\n\n  render() {\n    // attempt to retrieve CruiserToken if ThirdPartyToken acquired\n    // redirect to home page if CruiserToken\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: this.third_party_login,\n        children: \"Login to \\\"Google\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js"],"names":["React","Navigate","Button","Login","Component","constructor","props","login","bind","getThirdPartyToken","getBackendToken","localStorage","setItem","thirdPartyToken","getItem","console","log","backendToken","render","third_party_login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEU,QAALD,KAAK,GAAG;AACV;AACA,UAAM,KAAKE,kBAAL,EAAN,CAFU,CAGV;;AACA,UAAM,KAAKC,eAAL,EAAN;AACH;;AAEuB,QAAlBD,kBAAkB,GAAG;AACvBE,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,QAAxC;AACH;;AAEoB,QAAfF,eAAe,GAAG;AACpB,UAAMG,eAAe,GAAGF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAxB;;AACA,QAAI,CAACD,eAAL,EAAsB;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACH;;AACD,UAAMC,YAAY,GAAG,OAArB;AACAN,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCK,YAArC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,OAAO,EAAE,KAAKC,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvC+B;;AA0CpC,eAAehB,KAAf","sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.login = this.login.bind(this);\n    }\n\n    async login() {\n        // acquire ThirdPartyToken and save to localStorage\n        await this.getThirdPartyToken();\n        // acquire BackendToken using the ThirdPartyToken and save to localStorage\n        await this.getBackendToken();\n    }\n\n    async getThirdPartyToken() {\n        localStorage.setItem('thirdPartyToken', 'abcdef');\n    }\n\n    async getBackendToken() {\n        const thirdPartyToken = localStorage.getItem('thirdPartyToken');\n        if (!thirdPartyToken) {\n            console.log('Unable to retrieve ThirdPartyToken.');\n        }\n        const backendToken = 'ghijk';\n        localStorage.setItem('backendToken', backendToken);\n    }\n\n    render() {\n        // attempt to retrieve CruiserToken if ThirdPartyToken acquired\n        // redirect to home page if CruiserToken\n        return (\n            <div>\n                <h2>Login Page</h2>\n                <Button\n                    variant='contained'\n                    onClick={this.third_party_login}\n                >Login to \"Google\"</Button>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}