{"ast":null,"code":"var _jsxFileName = \"/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js\";\nimport React from 'react'; // import * as React from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport AirportShuttleRounded from '@mui/icons-material/AirportShuttleRounded';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Footer from '../components/Footer';\nimport '../index.css';\nimport { Navigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\nimport { orange } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n  }\n\n  async handleLoginOld(googleData) {\n    // fetch user data for our backend \n    const resp = await fetch('/api/login/google', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //store the user in the client\n\n    const data = await resp.json();\n\n    if (data) {\n      const token = data['access_token'];\n      localStorage.setItem('CruiserToken', token);\n      this.setState({});\n    }\n  }\n\n  async handleLogin(googleData) {\n    // fetch user data for our backend \n    const resp = await fetch('/api/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //store the user in the client\n\n    const data = await resp.json();\n\n    if (data) {\n      console.log(data);\n      localStorage.setItem('CruiserToken', 'fakeToken');\n      this.setState({});\n    }\n  }\n\n  async handleLoginFailure(err) {\n    console.log('Failed to login');\n    console.log(err);\n  }\n\n  render() {\n    const auth = isAuthenticated();\n\n    if (auth) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          sx: {\n            bgcolor: orange\n          },\n          component: \"main\",\n          maxWidth: \"xs\",\n          className: \"expand_and_center\",\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                m: 1,\n                bgcolor: 'secondary.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(AirportShuttleRounded, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h4\",\n              children: \"Cruise Coordinator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h5\",\n              variant: \"h6\",\n              children: \"Placeholder text for description or catchphrase or something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: googleClientId,\n              buttonText: \"Sign In with Google\",\n              onSuccess: this.handleLogin,\n              onFailure: this.handleLoginFailure,\n              cookiePolicy: 'single_host_origin'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","AirportShuttleRounded","Typography","Container","Footer","Navigate","GoogleLogin","isAuthenticated","orange","googleClientId","Login","Component","constructor","props","handleLogin","bind","handleLoginFailure","handleLoginOld","googleData","resp","fetch","method","body","JSON","stringify","token","tokenId","headers","data","json","localStorage","setItem","setState","console","log","err","render","auth","bgcolor","marginTop","display","flexDirection","alignItems","m"],"mappings":"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","sourcesContent":["import React from 'react';\n// import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport AirportShuttleRounded from '@mui/icons-material/AirportShuttleRounded';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport Footer from '../components/Footer';\n\nimport '../index.css'\n\nimport { Navigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\nimport { orange } from '@mui/material/colors';\n\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    }\n\n    async handleLoginOld(googleData) {\n\n        // fetch user data for our backend \n        const resp = await fetch('/api/login/google', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //store the user in the client\n        const data = await resp.json();\n        if (data) {\n            const token = data['access_token']\n            localStorage.setItem('CruiserToken', token);\n            this.setState({});\n        }\n    }\n\n    async handleLogin(googleData) {\n        // fetch user data for our backend \n        const resp = await fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //store the user in the client\n        const data = await resp.json();\n        if (data) {\n            console.log(data);\n            localStorage.setItem('CruiserToken', 'fakeToken');\n            this.setState({});\n        }\n    }\n\n    async handleLoginFailure(err) {\n        console.log('Failed to login');\n        console.log(err);\n    }\n\n    render() {\n\n        const auth = isAuthenticated();\n\n        if (auth) {\n            return <Navigate to='/' />\n        } else {\n            return (\n                <div>\n                    <Container sx={{\n                    bgcolor: orange,\n                }} component=\"main\" maxWidth=\"xs\" className='expand_and_center'>\n                        <CssBaseline />\n                        <Box\n                            sx={{\n                                marginTop: 8,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                                <AirportShuttleRounded />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h4\">\n                                Cruise Coordinator\n                            </Typography>\n                            <Typography component=\"h5\" variant=\"h6\">\n                                Placeholder text for description or catchphrase or something\n                            </Typography>\n                            <GoogleLogin\n                                clientId={googleClientId}\n                                buttonText='Sign In with Google'\n                                onSuccess={this.handleLogin}\n                                onFailure={this.handleLoginFailure}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </Box>\n                    </Container>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}