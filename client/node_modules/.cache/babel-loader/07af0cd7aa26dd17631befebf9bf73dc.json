{"ast":null,"code":"var _jsxFileName = \"/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js\";\nimport React from 'react'; // import * as React from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Navigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n  }\n\n  async handleLoginOld(googleData) {\n    // fetch user data for our backend \n    const resp = await fetch('/api/login/google', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //store the user in the client\n\n    const data = await resp.json();\n\n    if (data) {\n      const token = data['access_token'];\n      localStorage.setItem('CruiserToken', token);\n      this.setState({});\n    }\n  }\n\n  async handleLogin(googleData) {\n    // fetch user data for our backend \n    const resp = await fetch('/api/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //store the user in the client\n\n    const data = await resp.json();\n\n    if (data) {\n      console.log(data);\n      localStorage.setItem('CruiserToken', 'fakeToken');\n      this.setState({});\n    }\n  }\n\n  async handleLoginFailure(err) {\n    console.log('Failed to login');\n    console.log(err);\n  }\n\n  render() {\n    const auth = isAuthenticated();\n\n    if (auth) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            component: \"main\",\n            maxWidth: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                marginTop: 8,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                sx: {\n                  m: 1,\n                  bgcolor: 'secondary.main'\n                },\n                children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h5\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                onSubmit: handleSubmit,\n                noValidate: true,\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"normal\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"normal\",\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"current-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    value: \"remember\",\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 50\n                  }, this),\n                  label: \"Remember me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  fullWidth: true,\n                  variant: \"contained\",\n                  sx: {\n                    mt: 3,\n                    mb: 2\n                  },\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"#\",\n                      variant: \"body2\",\n                      children: \"Forgot password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"#\",\n                      variant: \"body2\",\n                      children: \"Don't have an account? Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n              sx: {\n                mt: 8,\n                mb: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: googleClientId,\n            buttonText: \"Sign In with Google\",\n            onSuccess: this.handleLogin,\n            onFailure: this.handleLoginFailure,\n            cookiePolicy: 'single_host_origin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","Navigate","GoogleLogin","isAuthenticated","googleClientId","Login","Component","constructor","props","handleLogin","bind","handleLoginFailure","handleLoginOld","googleData","resp","fetch","method","body","JSON","stringify","token","tokenId","headers","data","json","localStorage","setItem","setState","console","log","err","render","auth","theme","marginTop","display","flexDirection","alignItems","m","bgcolor","handleSubmit","mt","mb"],"mappings":"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","sourcesContent":["import React from 'react';\n// import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Navigate } from 'react-router-dom'\nimport { GoogleLogin } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\n\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    }\n\n    async handleLoginOld(googleData) {\n\n        // fetch user data for our backend \n        const resp = await fetch('/api/login/google', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //store the user in the client\n        const data = await resp.json();\n        if (data) {\n            const token = data['access_token']\n            localStorage.setItem('CruiserToken', token);\n            this.setState({});\n        }\n    }\n\n    async handleLogin(googleData) {\n        // fetch user data for our backend \n        const resp = await fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //store the user in the client\n        const data = await resp.json();\n        if (data) {\n            console.log(data);\n            localStorage.setItem('CruiserToken', 'fakeToken');\n            this.setState({});\n        }\n    }\n\n    async handleLoginFailure(err) {\n        console.log('Failed to login');\n        console.log(err);\n    }\n\n    render() {\n\n        const auth = isAuthenticated();\n\n        if (auth) {\n            return <Navigate to='/' />\n        } else {\n            return (\n                <div>\n                    <ThemeProvider theme={theme}>\n                        <Container component=\"main\" maxWidth=\"xs\">\n                            <CssBaseline />\n                            <Box\n                                sx={{\n                                    marginTop: 8,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        autoFocus\n                                    />\n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                        label=\"Remember me\"\n                                    />\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        sx={{ mt: 3, mb: 2 }}\n                                    >\n                                        Sign In\n                                    </Button>\n                                    <Grid container>\n                                        <Grid item xs>\n                                            <Link href=\"#\" variant=\"body2\">\n                                                Forgot password?\n                                            </Link>\n                                        </Grid>\n                                        <Grid item>\n                                            <Link href=\"#\" variant=\"body2\">\n                                                {\"Don't have an account? Sign Up\"}\n                                            </Link>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </Box>\n                            <Copyright sx={{ mt: 8, mb: 4 }} />\n                        </Container>\n                    </ThemeProvider>\n                    <div>\n                        <GoogleLogin\n                            clientId={googleClientId}\n                            buttonText='Sign In with Google'\n                            onSuccess={this.handleLogin}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}