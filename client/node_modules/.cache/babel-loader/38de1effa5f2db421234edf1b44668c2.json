{"ast":null,"code":"var _jsxFileName = \"/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n  }\n\n  async handleLogin(googleData) {\n    // fetch user data for our backend \n    const resp = await fetch('/api/login/google', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //store the user in the client\n\n    const data = await resp.json();\n    localStorage.setItem('CruiserToken', data);\n    this.setState({});\n  }\n\n  async handleLoginFailure(err) {\n    console.log('failed login');\n    console.log(err);\n  }\n\n  render() {\n    const auth = isAuthenticated();\n\n    if (auth) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: googleClientId,\n            buttonText: \"Login with Google\",\n            onSuccess: this.handleLogin,\n            onFailure: this.handleLoginFailure,\n            cookiePolicy: 'single_host_origin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/src/pages/Login.js"],"names":["React","Navigate","GoogleLogin","GoogleLogout","isAuthenticated","googleClientId","Login","Component","constructor","props","handleLogin","bind","handleLoginFailure","googleData","resp","fetch","method","body","JSON","stringify","token","tokenId","headers","data","json","localStorage","setItem","setState","err","console","log","render","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,eAAT,QAAgC,uBAAhC;;AAEA,MAAMC,cAAc,GAAG,0EAAvB;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEgB,QAAXD,WAAW,CAACG,UAAD,EAAa;AAE1B;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAEP,UAAU,CAACQ;AADD,OAAf,CAFoC;AAK1CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALiC,KAAtB,CAAxB,CAH0B,CAY1B;;AACA,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,IAAL,EAAnB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,IAArC;AACA,SAAKI,QAAL,CAAc,EAAd;AACH;;AAEuB,QAAlBf,kBAAkB,CAACgB,GAAD,EAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAEL,UAAMC,IAAI,GAAG5B,eAAe,EAA5B;;AAEA,QAAI4B,IAAJ,EAAU;AACN,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI,QAAC,WAAD;AACI,YAAA,QAAQ,EAAE3B,cADd;AAEI,YAAA,UAAU,EAAC,mBAFf;AAGI,YAAA,SAAS,EAAE,KAAKK,WAHpB;AAII,YAAA,SAAS,EAAE,KAAKE,kBAJpB;AAKI,YAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;AACJ;;AArD+B;;AAwDpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { isAuthenticated } from '../auth/AuthFunctions';\n\nconst googleClientId = '301139010020-rm1mnr8dlnd3656lt8j5f1gv6o001uv6.apps.googleusercontent.com'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    }\n\n    async handleLogin(googleData) {\n\n        // fetch user data for our backend \n        const resp = await fetch('/api/login/google', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //store the user in the client\n        const data = await resp.json();\n        localStorage.setItem('CruiserToken', data);\n        this.setState({});\n    }\n\n    async handleLoginFailure(err) {\n        console.log('failed login');\n        console.log(err);\n    }\n\n    render() {\n\n        const auth = isAuthenticated();\n\n        if (auth) {\n            return <Navigate to='/' />\n        } else {\n            return (\n                <div>\n                    <h2>Login Page</h2>\n                    <div>\n                        <GoogleLogin\n                            clientId={googleClientId}\n                            buttonText='Login with Google'\n                            onSuccess={this.handleLogin}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}