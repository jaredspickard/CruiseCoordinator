{"ast":null,"code":"import _asyncToGenerator from\"/Users/jaredspickard/Development/cruise-coordinator/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jaredspickard/Development/cruise-coordinator/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jaredspickard/Development/cruise-coordinator/client/node_modules/@babel/runtime/regenerator/index.js\";// /src/hooks/useAuth.tsx\nimport React,{useState,createContext,useContext,useEffect}from\"react\";// Create the context \nimport{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/createContext(null);export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;// Store boolean to indicate whether a user is authenticated (default false)\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),authed=_useState2[0],setAuthed=_useState2[1];// Store new value to indicate the call has not finished (default true)\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var signup=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var signUpResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return asyncServerSignUp(email,password);case 2:signUpResult=_context.sent;if(signUpResult){setAuthed(true);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function signup(_x,_x2){return _ref2.apply(this,arguments);};}();var login=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){var loginResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return asyncServerLogin(email,password);case 2:loginResult=_context2.sent;if(loginResult){setAuthed(true);}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function login(_x3,_x4){return _ref3.apply(this,arguments);};}();// const loginGoogle = async (googleData) => {\n//    // log in to the server\n//    const loginResult = await asyncServerGoogleLogin(googleData.tokenId);\n//    // if successful, set authed var to true\n//    if (loginResult) {\n//       setAuthed(true);\n//    }\n// }\nvar logout=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var logoutResult;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return asyncServerLogout();case 2:logoutResult=_context3.sent;if(logoutResult){setAuthed(false);}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function logout(){return _ref4.apply(this,arguments);};}();var asyncServerSignUp=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email,password){var resp,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch('/api/register',{method:'POST',body:JSON.stringify({email:email,password:password}),headers:{'Content-Type':'application/json'}});case 2:resp=_context4.sent;_context4.next=5;return resp.json();case 5:data=_context4.sent;if(!data){_context4.next=10;break;}return _context4.abrupt(\"return\",data.success);case 10:return _context4.abrupt(\"return\",false);case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function asyncServerSignUp(_x5,_x6){return _ref5.apply(this,arguments);};}();var asyncServerLogin=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(email,password){var resp,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch('/api/login',{method:'POST',body:JSON.stringify({email:email,password:password}),headers:{'Content-Type':'application/json'}});case 2:resp=_context5.sent;_context5.next=5;return resp.json();case 5:data=_context5.sent;if(!data){_context5.next=10;break;}return _context5.abrupt(\"return\",data.success);case 10:return _context5.abrupt(\"return\",false);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return function asyncServerLogin(_x7,_x8){return _ref6.apply(this,arguments);};}();// const asyncServerGoogleLogin = async (googleTokenId) => {\n//    const resp = await fetch('/api/login', {\n//       method: 'POST',\n//       body: JSON.stringify({\n//           token: googleTokenId\n//       }),\n//       headers: {\n//           'Content-Type': 'application/json'\n//       }\n//   });\n//   const data = await resp.json();\n//   if (data) {\n//       return data.logged_in;\n//   } else {\n//      return false;\n//   }\n// }\nvar asyncServerLogout=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var resp,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch('/api/logout');case 2:resp=_context6.sent;_context6.next=5;return resp.json();case 5:data=_context6.sent;if(!data){_context6.next=10;break;}return _context6.abrupt(\"return\",data.logged_out);case 10:return _context6.abrupt(\"return\",false);case 11:case\"end\":return _context6.stop();}}},_callee6);}));return function asyncServerLogout(){return _ref7.apply(this,arguments);};}();// Runs once when the component first mounts\nuseEffect(function(){asyncServerAuthCheck().then(function(authenticatedUser){if(authenticatedUser){setAuthed(true);setLoading(false);}else{setAuthed(false);setLoading(false);}});},[]);// Verify authentication with server\nvar asyncServerAuthCheck=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var resp,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return fetch('/api/auth');case 2:resp=_context7.sent;_context7.next=5;return resp.json();case 5:data=_context7.sent;if(!data){_context7.next=10;break;}return _context7.abrupt(\"return\",data.authenticated);case 10:return _context7.abrupt(\"return\",false);case 11:case\"end\":return _context7.stop();}}},_callee7);}));return function asyncServerAuthCheck(){return _ref8.apply(this,arguments);};}();return/*#__PURE__*/ (// Expose the new `loading` value so we can consume it in `App.tsx`\n_jsx(AuthContext.Provider,{value:{authed:authed,setAuthed:setAuthed,signup:signup,login:login,logout:logout,loading:loading},children:children}));};// Finally creating the custom hook \nexport var useAuth=function useAuth(){return useContext(AuthContext);};","map":{"version":3,"sources":["/Users/jaredspickard/Development/cruise-coordinator/client/src/auth/Authentication.js"],"names":["React","useState","createContext","useContext","useEffect","AuthContext","AuthProvider","children","authed","setAuthed","loading","setLoading","signup","email","password","asyncServerSignUp","signUpResult","login","asyncServerLogin","loginResult","logout","asyncServerLogout","logoutResult","fetch","method","body","JSON","stringify","headers","resp","json","data","success","logged_out","asyncServerAuthCheck","then","authenticatedUser","authenticated","useAuth"],"mappings":"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","sourcesContent":["// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\n\n// Create the context \nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n   // Store boolean to indicate whether a user is authenticated (default false)\n   const [authed, setAuthed] = useState(false);\n   // Store new value to indicate the call has not finished (default true)\n   const [loading, setLoading] = useState(true);\n\n   const signup = async (email, password) => {\n      const signUpResult = await asyncServerSignUp(email, password);\n      if (signUpResult) {\n         setAuthed(true);\n      }\n   }\n\n   const login = async (email, password) => {\n      const loginResult = await asyncServerLogin(email, password);\n      if (loginResult) {\n         setAuthed(true);\n      }\n   }\n\n   // const loginGoogle = async (googleData) => {\n   //    // log in to the server\n   //    const loginResult = await asyncServerGoogleLogin(googleData.tokenId);\n   //    // if successful, set authed var to true\n   //    if (loginResult) {\n   //       setAuthed(true);\n   //    }\n   // }\n\n   const logout = async () => {\n      const logoutResult = await asyncServerLogout();\n      if (logoutResult) {\n         setAuthed(false);\n      }\n   }\n\n   const asyncServerSignUp = async (email, password) => {\n      const resp = await fetch('/api/register', {\n         method: 'POST',\n         body: JSON.stringify({\n             email: email,\n             password: password\n         }),\n         headers: {\n             'Content-Type': 'application/json'\n         }\n     });\n     const data = await resp.json();\n     if (data) {\n         return data.success;\n     } else {\n        return false;\n     }\n   }\n\n   const asyncServerLogin = async (email, password) => {\n      const resp = await fetch('/api/login', {\n         method: 'POST',\n         body: JSON.stringify({\n             email: email,\n             password: password\n         }),\n         headers: {\n             'Content-Type': 'application/json'\n         }\n     });\n     const data = await resp.json();\n     if (data) {\n         return data.success;\n     } else {\n        return false;\n     }\n   }\n\n   // const asyncServerGoogleLogin = async (googleTokenId) => {\n   //    const resp = await fetch('/api/login', {\n   //       method: 'POST',\n   //       body: JSON.stringify({\n   //           token: googleTokenId\n   //       }),\n   //       headers: {\n   //           'Content-Type': 'application/json'\n   //       }\n   //   });\n   //   const data = await resp.json();\n   //   if (data) {\n   //       return data.logged_in;\n   //   } else {\n   //      return false;\n   //   }\n   // }\n\n   const asyncServerLogout = async () => {\n      const resp = await fetch('/api/logout');\n      const data = await resp.json();\n      if (data) {\n         return data.logged_out;\n      } else {\n         return false;\n      }\n   }\n\n   // Runs once when the component first mounts\n   useEffect(() => {\n      asyncServerAuthCheck().then((authenticatedUser) => {\n         if (authenticatedUser) {\n            setAuthed(true);\n            setLoading(false);\n         } else {\n            setAuthed(false);\n            setLoading(false);\n         }\n      });\n   }, []);\n\n   // Verify authentication with server\n   const asyncServerAuthCheck = async () => {\n      const resp = await fetch('/api/auth');\n      const data = await resp.json();\n      if (data) {\n         return data.authenticated;\n      } else {\n         return false;\n      }\n   }\n\n   return (\n      // Expose the new `loading` value so we can consume it in `App.tsx`\n      <AuthContext.Provider\n         value={{ authed, setAuthed, signup, login, logout, loading }}\n      >\n         {children}\n      </AuthContext.Provider>\n   );\n}\n\n// Finally creating the custom hook \nexport const useAuth = () => useContext(AuthContext);"]},"metadata":{},"sourceType":"module"}